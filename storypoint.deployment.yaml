apiVersion: apps/v1
kind: Deployment
metadata:
  name: storypoint-web
  labels:
    app: storypoint-web
spec:
  selector:
    matchLabels:
      app: storypoint-web
  replicas: 1
  template:
    metadata:
      labels:
        app: storypoint-web
    spec:
      containers:
        - name: storypoint-web
          image: dekau/storypoint-web
          imagePullPolicy: Always
          ports:
            - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: storypoint-web
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: storypoint-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storypoint-server
spec:
  selector:
    matchLabels:
      app: storypoint-server
  replicas: 1
  template:
    metadata:
      labels:
        app: storypoint-server
    spec:
      containers:
        - name: storypoint-server
          image: dekau/storypoint-server
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: REDIS_HOST
              value: storypoint-redis
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: storypoint-server
  labels:
    app: storypoint-server
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: storypoint-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storypoint-redis
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
        - name: master
          image: redis:alpine3.11
          resources:
            requests:
              cpu: 100m
              memory: 250Mi
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: storypoint-redis
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storypoint-redis-slave
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      containers:
        - name: slave
          image: gcr.io/google_samples/gb-redisslave:v3
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: storypoint-redis-slave
  labels:
    app: redis
    role: slave
    tier: backend
spec:
  ports:
    - port: 6379
  selector:
    app: redis
    role: slave
    tier: backend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: 3600
    nginx.ingress.kubernetes.io/proxy-send-timeout: 3600
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: storypoint-web
              servicePort: 80
          - backend:
              serviceName: storypoint-server
              servicePort: 8080
            path: /ws
