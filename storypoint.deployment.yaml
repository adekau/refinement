apiVersion: apps/v1
kind: Deployment
metadata:
  name: storypoint-web
  labels:
    app: storypoint-web
spec:
  selector:
    matchLabels:
      app: storypoint-web
  replicas: 1
  template:
    metadata:
      labels:
        app: storypoint-web
    spec:
      containers:
        - name: storypoint-web
          image: dekau/storypoint-web
          imagePullPolicy: Always
          ports:
            - containerPort: 80
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: storypoint-web
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: storypoint-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storypoint-server
spec:
  selector:
    matchLabels:
      app: storypoint-server
  replicas: 1
  template:
    metadata:
      labels:
        app: storypoint-server
    spec:
      containers:
        - name: storypoint-server
          image: dekau/storypoint-server
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: REDIS_HOST
              value: storypoint-redis-redis-ha-haproxy
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: storypoint-server
  labels:
    app: storypoint-server
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: storypoint-server
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.org/websocket-services: storypoint-server
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: storypoint-web
              servicePort: 80
          - backend:
              serviceName: storypoint-server
              servicePort: 8080
            path: /ws
